name: CI Pipeline

on:
  push:
    branches:
      - develop
    paths-ignore:
      - '**.md' 

jobs:
  # unit-testing:
  #   runs-on: ubuntu-latest
  #   environment: dev
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup Python 
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: 3.11
  #     # Install pip, pytest and project dependencies
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install pytest
  #         pip install -r requirements.txt              
  #     - name: Test with pytest
  #       env:
  #         PYTHONPATH: flow
  #         PYTHONWARNINGS: ignore::DeprecationWarning,ignore::RemovedInMarshmallow4Warning
  #       run: pytest tests/ --doctest-modules --junitxml=junit/test-results-3.11.xml
  #     - name: Upload pytest test results
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: pytest-results-3.11
  #         path: junit/test-results-3.11.xml
  #       if: always()

  build-flow-docker-files:
    # needs: unit-testing
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
  
      - name: Install promptflow CLI
        run: |
          python -m pip install --upgrade pip
          pip install promptflow --upgrade

      - name: Verify promptflow CLI installation
        run: pf --version  

      - name: Install required dependencies
        run: pip install -r flow/requirements.txt

      - name: Create Flow Docker files
        run: |
          # TODO: REVISAR SE PRECISA DE Connections
          # reference: https://github.com/microsoft/promptflow/tree/main/examples/tutorials/flow-deploy/azure-app-service
          pf flow build --source flow --output dist --format docker

      - name: Upload dist as artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-artifact
          path: dist/


  build-and-evaluate-flow:
    needs: build-flow-docker-files
    env:
      IMAGE_NAME: rag-project
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: Download dist artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-artifact
          path: dist/

      - name: List contents of dist
        run: |
          ls -l dist/
        shell: bash

      - name: Build Docker ImageCreate
        run: |
          docker build dist -t ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Evaluate Flow
        run: |
          # TODO: REVISAR P QUE FAZER COM ESSA KEY
          docker run -p 8080:8080 -e OPEN_AI_CONNECTION_API_KEY=123 -e PROMPTFLOW_SERVING_ENGINE=fastapi -e PROMPTFLOW_WORKER_NUM=8 ${{ env.IMAGE_NAME }}-serve     

  # register-flow:
  #   needs: ai-assisted-evaluation    
  #   runs-on: ubuntu-latest
  #   environment: dev
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Build
  #       run: |
  #         echo "TODO: Register Flow"
  #       shell: bash


  # TODO: Call CD pipeline to provision and deploy the application

